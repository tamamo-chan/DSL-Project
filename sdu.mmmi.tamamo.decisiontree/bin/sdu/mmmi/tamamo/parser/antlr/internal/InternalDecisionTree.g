/*
 * generated by Xtext 2.24.0
 */
grammar InternalDecisionTree;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package sdu.mmmi.tamamo.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package sdu.mmmi.tamamo.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import sdu.mmmi.tamamo.services.DecisionTreeGrammarAccess;

}

@parser::members {

 	private DecisionTreeGrammarAccess grammarAccess;

    public InternalDecisionTreeParser(TokenStream input, DecisionTreeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Start";
   	}

   	@Override
   	protected DecisionTreeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStart
entryRuleStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartRule()); }
	iv_ruleStart=ruleStart
	{ $current=$iv_ruleStart.current; }
	EOF;

// Rule Start
ruleStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Decisions:'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartAccess().getDecisionsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getDecisionDecisionParserRuleCall_1_0());
				}
				lv_decision_1_0=ruleDecision
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					set(
						$current,
						"decision",
						lv_decision_1_0,
						"sdu.mmmi.tamamo.DecisionTree.Decision");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='Input:'
		{
			newLeafNode(otherlv_2, grammarAccess.getStartAccess().getInputKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getInputInputParserRuleCall_3_0());
				}
				lv_input_3_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					set(
						$current,
						"input",
						lv_input_3_0,
						"sdu.mmmi.tamamo.DecisionTree.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='Parameters:'
		{
			newLeafNode(otherlv_4, grammarAccess.getStartAccess().getParametersKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getParameterParameterParserRuleCall_5_0());
				}
				lv_parameter_5_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					set(
						$current,
						"parameter",
						lv_parameter_5_0,
						"sdu.mmmi.tamamo.DecisionTree.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='Rules:'
		{
			newLeafNode(otherlv_6, grammarAccess.getStartAccess().getRulesKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getRulesRulesParserRuleCall_7_0());
				}
				lv_rules_7_0=ruleRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					set(
						$current,
						"rules",
						lv_rules_7_0,
						"sdu.mmmi.tamamo.DecisionTree.Rules");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='Conclusion:'
		{
			newLeafNode(otherlv_8, grammarAccess.getStartAccess().getConclusionKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getConclusionConclusionParserRuleCall_9_0());
				}
				lv_conclusion_9_0=ruleConclusion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					set(
						$current,
						"conclusion",
						lv_conclusion_9_0,
						"sdu.mmmi.tamamo.DecisionTree.Conclusion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDecision
entryRuleDecision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionRule()); }
	iv_ruleDecision=ruleDecision
	{ $current=$iv_ruleDecision.current; }
	EOF;

// Rule Decision
ruleDecision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_text_0_0=RULE_ID
					{
						newLeafNode(lv_text_0_0, grammarAccess.getDecisionAccess().getTextIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDecisionRule());
						}
						setWithLastConsumed(
							$current,
							"text",
							lv_text_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getDecisionAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDecisionAccess().getNextDecisionParserRuleCall_0_1_1_0());
						}
						lv_next_2_0=ruleDecision
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDecisionRule());
							}
							set(
								$current,
								"next",
								lv_next_2_0,
								"sdu.mmmi.tamamo.DecisionTree.Decision");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_text_3_0=RULE_ID
					{
						newLeafNode(lv_text_3_0, grammarAccess.getDecisionAccess().getTextIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDecisionRule());
						}
						setWithLastConsumed(
							$current,
							"text",
							lv_text_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getDecisionAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionAccess().getNestedDecisionParserRuleCall_1_2_0());
					}
					lv_nested_5_0=ruleDecision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionRule());
						}
						set(
							$current,
							"nested",
							lv_nested_5_0,
							"sdu.mmmi.tamamo.DecisionTree.Decision");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getDecisionAccess().getRightParenthesisKeyword_1_3());
			}
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getDecisionAccess().getCommaKeyword_1_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDecisionAccess().getNextDecisionParserRuleCall_1_4_1_0());
						}
						lv_next_8_0=ruleDecision
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDecisionRule());
							}
							set(
								$current,
								"next",
								lv_next_8_0,
								"sdu.mmmi.tamamo.DecisionTree.Decision");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInputAccess().getTypeInputIntParserRuleCall_0_0_0());
					}
					lv_type_0_1=ruleInputInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputRule());
						}
						set(
							$current,
							"type",
							lv_type_0_1,
							"sdu.mmmi.tamamo.DecisionTree.InputInt");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getInputAccess().getTypeInputStringParserRuleCall_0_0_1());
					}
					lv_type_0_2=ruleInputString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputRule());
						}
						set(
							$current,
							"type",
							lv_type_0_2,
							"sdu.mmmi.tamamo.DecisionTree.InputString");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getInputAccess().getTypeInputBoolParserRuleCall_0_0_2());
					}
					lv_type_0_3=ruleInputBool
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputRule());
						}
						set(
							$current,
							"type",
							lv_type_0_3,
							"sdu.mmmi.tamamo.DecisionTree.InputBool");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getInputAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputAccess().getNextInputParserRuleCall_1_1_0());
					}
					lv_next_2_0=ruleInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputRule());
						}
						set(
							$current,
							"next",
							lv_next_2_0,
							"sdu.mmmi.tamamo.DecisionTree.Input");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInputInt
entryRuleInputInt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputIntRule()); }
	iv_ruleInputInt=ruleInputInt
	{ $current=$iv_ruleInputInt.current; }
	EOF;

// Rule InputInt
ruleInputInt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='int'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputIntAccess().getIntKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputIntAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputIntRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleInputString
entryRuleInputString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputStringRule()); }
	iv_ruleInputString=ruleInputString
	{ $current=$iv_ruleInputString.current; }
	EOF;

// Rule InputString
ruleInputString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='string'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputStringAccess().getStringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputStringAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputStringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleInputBool
entryRuleInputBool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputBoolRule()); }
	iv_ruleInputBool=ruleInputBool
	{ $current=$iv_ruleInputBool.current; }
	EOF;

// Rule InputBool
ruleInputBool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='bool'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputBoolAccess().getBoolKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputBoolAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputBoolRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getParameterAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getNextParameterParserRuleCall_3_0());
				}
				lv_next_3_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"next",
						lv_next_3_0,
						"sdu.mmmi.tamamo.DecisionTree.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleRules
entryRuleRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRulesRule()); }
	iv_ruleRules=ruleRules
	{ $current=$iv_ruleRules.current; }
	EOF;

// Rule Rules
ruleRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesAccess().getLeftRuleTypeParserRuleCall_0_0());
				}
				lv_left_0_0=ruleRuleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"sdu.mmmi.tamamo.DecisionTree.RuleType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRulesAccess().getOperatorOperatorParserRuleCall_1_0_0());
					}
					lv_operator_1_0=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRulesRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"sdu.mmmi.tamamo.DecisionTree.Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRulesAccess().getRightRuleTypeParserRuleCall_1_1_0());
					}
					lv_right_2_0=ruleRuleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRulesRule());
						}
						set(
							$current,
							"right",
							lv_right_2_0,
							"sdu.mmmi.tamamo.DecisionTree.RuleType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='?'
		{
			newLeafNode(otherlv_3, grammarAccess.getRulesAccess().getQuestionMarkKeyword_2());
		}
		(
			(
				lv_affected_parameter_4_0=RULE_ID
				{
					newLeafNode(lv_affected_parameter_4_0, grammarAccess.getRulesAccess().getAffected_parameterIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRulesRule());
					}
					setWithLastConsumed(
						$current,
						"affected_parameter",
						lv_affected_parameter_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_points_5_0=RULE_INT
				{
					newLeafNode(lv_points_5_0, grammarAccess.getRulesAccess().getPointsINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRulesRule());
					}
					setWithLastConsumed(
						$current,
						"points",
						lv_points_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesAccess().getNextRulesParserRuleCall_5_0());
				}
				lv_next_6_0=ruleRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesRule());
					}
					set(
						$current,
						"next",
						lv_next_6_0,
						"sdu.mmmi.tamamo.DecisionTree.Rules");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleRuleType
entryRuleRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRuleTypeRule()); }
	iv_ruleRuleType=ruleRuleType
	{ $current=$iv_ruleRuleType.current.getText(); }
	EOF;

// Rule RuleType
ruleRuleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getRuleTypeAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getRuleTypeAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	iv_ruleOperator=ruleOperator
	{ $current=$iv_ruleOperator.current; }
	EOF;

// Rule Operator
ruleOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOperatorAccess().getGreaterThanAction_0_0(),
						$current);
				}
			)
			otherlv_1='>'
			{
				newLeafNode(otherlv_1, grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOperatorAccess().getLessThanAction_1_0(),
						$current);
				}
			)
			otherlv_3='<'
			{
				newLeafNode(otherlv_3, grammarAccess.getOperatorAccess().getLessThanSignKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOperatorAccess().getGreaterEqualAction_2_0(),
						$current);
				}
			)
			otherlv_5='>='
			{
				newLeafNode(otherlv_5, grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOperatorAccess().getLessEqualAction_3_0(),
						$current);
				}
			)
			otherlv_7='<='
			{
				newLeafNode(otherlv_7, grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleConclusion
entryRuleConclusion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConclusionRule()); }
	iv_ruleConclusion=ruleConclusion
	{ $current=$iv_ruleConclusion.current; }
	EOF;

// Rule Conclusion
ruleConclusion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConclusionAccess().getLeftRuleTypeParserRuleCall_0_0_0());
					}
					lv_left_0_0=ruleRuleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConclusionRule());
						}
						set(
							$current,
							"left",
							lv_left_0_0,
							"sdu.mmmi.tamamo.DecisionTree.RuleType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConclusionAccess().getOperatorOperatorParserRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConclusionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"sdu.mmmi.tamamo.DecisionTree.Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConclusionAccess().getRightRuleTypeParserRuleCall_0_2_0());
					}
					lv_right_2_0=ruleRuleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConclusionRule());
						}
						set(
							$current,
							"right",
							lv_right_2_0,
							"sdu.mmmi.tamamo.DecisionTree.RuleType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getConclusionAccess().getColonKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConclusionAccess().getDecisionDecisionParserRuleCall_0_4_0());
					}
					lv_decision_4_0=ruleDecision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConclusionRule());
						}
						set(
							$current,
							"decision",
							lv_decision_4_0,
							"sdu.mmmi.tamamo.DecisionTree.Decision");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConclusionAccess().getNextConclusionParserRuleCall_0_5_0());
					}
					lv_next_5_0=ruleConclusion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConclusionRule());
						}
						set(
							$current,
							"next",
							lv_next_5_0,
							"sdu.mmmi.tamamo.DecisionTree.Conclusion");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getConclusionAccess().getConclusionNestedParserRuleCall_1_0());
			}
			this_ConclusionNested_6=ruleConclusionNested
			{
				$current = $this_ConclusionNested_6.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConclusionAccess().getNextConclusionParserRuleCall_1_1_0());
					}
					lv_next_7_0=ruleConclusion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConclusionRule());
						}
						set(
							$current,
							"next",
							lv_next_7_0,
							"sdu.mmmi.tamamo.DecisionTree.Conclusion");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			otherlv_8='else:'
			{
				newLeafNode(otherlv_8, grammarAccess.getConclusionAccess().getElseKeyword_2_0());
			}
			(
				(
					lv_left_9_0=RULE_ID
					{
						newLeafNode(lv_left_9_0, grammarAccess.getConclusionAccess().getLeftIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConclusionRule());
						}
						setWithLastConsumed(
							$current,
							"left",
							lv_left_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleConclusionNested
entryRuleConclusionNested returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConclusionNestedRule()); }
	iv_ruleConclusionNested=ruleConclusionNested
	{ $current=$iv_ruleConclusionNested.current; }
	EOF;

// Rule ConclusionNested
ruleConclusionNested returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_parent_0_0=RULE_ID
				{
					newLeafNode(lv_parent_0_0, grammarAccess.getConclusionNestedAccess().getParentIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConclusionNestedRule());
					}
					setWithLastConsumed(
						$current,
						"parent",
						lv_parent_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConclusionNestedAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConclusionNestedAccess().getNestedConclusionParserRuleCall_2_0());
				}
				lv_nested_2_0=ruleConclusion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConclusionNestedRule());
					}
					set(
						$current,
						"nested",
						lv_nested_2_0,
						"sdu.mmmi.tamamo.DecisionTree.Conclusion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getConclusionNestedAccess().getRightParenthesisKeyword_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
